{"version":3,"sources":["scripts/app.js"],"names":["wipImageZoomDirective","$timeout","restrict","template","replace","scope","selectedModel","selectedIndex","wipImageZoom","immersive","controllerAs","link","element","attrs","ctrl","el","init","controller","$scope","$document","$window","$compile","vm","options","angular","extend","defaultOpts","images","mainImage","defaultIndex","update","updateTimeout","cancel","initThumbs","initZoom","updateThumbsPos","initSizes","zoomTracker","style","cursor","lens","zoomLens","display","removeEventListeners","immersiveModeActive","immersiveMode","innerWidth","addEventListener","enableImmersiveMode","addEventListeners","zoomStateEnable","zoomStateDisable","setZoomImagePosition","removeEventListener","disableImmersiveMode","find","removeClass","immersedEl","remove","ev","preventDefault","stopPropagation","$apply","addClass","body","eq","immersedImageOpt","copy","append","length","thumbsWrapperWidth","thumbsWrapper","clientWidth","thumbWidth","Math","round","thumbColPadding","thumbCol","thumbsWidth","maxPosX","$evalAsync","thumbsPos","thumbsEl","paddingBottom","paddingTop","i","children","thumb","width","paddingRight","nextThumb","scrollThumbs","prevThumb","newPosX","scrollX","transform","tracker","getBoundingClientRect","trackerW","trackerH","height","trackerL","left","trackerT","top","scrollY","maskW","maskH","zoomMaskEl","boxW","boxH","zoomLevel","zoomImageEl","zoomImgW","offsetWidth","zoomImgH","offsetHeight","setLensSize","e","te","type","touches","evPosX","pageX","evPosY","pageY","setLensPosition","method","trackLens","trackPointer","posX","lensW","zoomLevelRatio","lensPosX","posY","lensH","lensPosY","getSelectedIndex","isInView","medium","zoomActive","updateMainImage","image","indexOf","this","boxPos","immersiveModeMessage","prevThumbButton","nextThumbButton","prevThumbActive","nextThumbActive","$watch","newVal","oldVal","isDefined","window","on","Ps","document","wipImageZoomLensDirective","require","wipImageZoomTrackerDirective","wipImageZoomMaskDirective","wipImageZoomImageDirective","wipImageZoomThumbsDirective","getElementsByClassName","imageOnLoadDirective","$log","imageOnLoad","warn","$inject","module","directive","MainController","zoomOptions1","defaultImage","large","runBlock","run","config","$templateCache","put"],"mappings":"AAUA,QAASA,uBAAsBC,GAE3B,OACIC,SAAc,KACdC,SAAc,6zCACdC,SAAc,EACdC,OACIC,cAAe,KACfC,cAAe,KACfC,aAAe,IACfC,UAAe,MAEnBC,aAAc,KACdC,KAAc,SAAUN,EAAOO,EAASC,EAAOC,GAE3CA,EAAKC,GAAKH,EACVE,EAAKE,QAETC,YAAA,SAAA,YAAA,UAAA,WAAc,SAAUC,EAAQC,EAAWC,EAASC,GAqDhD,QAASL,KAELM,EAAGC,QAAWL,EAAOV,aAA6BgB,QAAQC,OAAOC,EAAaR,EAAOV,cAAjDkB,EACpCJ,EAAGK,OAASL,EAAGC,QAAQI,OAEvBL,EAAGM,UAAYN,EAAGK,OAAOL,EAAGC,QAAQM,cAEpCX,EAAOX,cAAgBe,EAAGC,QAAQM,aAClCX,EAAOZ,cAAgBgB,EAAGM,UAG9B,QAASE,KAGAC,GAED9B,EAAS+B,OAAOD,GAGpBA,EAAgB9B,EAAS,WAErBgC,IACAC,IACAC,KACD,KAGP,QAASD,KAELE,IAEAd,EAAGe,YAAYC,MAAMC,OAASjB,EAAGC,QAAQgB,OAEpCjB,EAAGC,QAAQiB,KAEZlB,EAAGmB,SAASH,MAAMI,QAAU,QAI5BpB,EAAGmB,SAASH,MAAMI,QAAU,OAIhCC,IAEArB,EAAGsB,oBAAsBtB,EAAGC,QAAQsB,eAAiBvB,EAAGC,QAAQsB,cAAgBzB,EAAQ0B,WAEnFxB,EAAGsB,sBAAwB1B,EAAOT,WAEnCa,EAAGe,YAAYU,iBAAiB,YAAaC,KAG3C1B,EAAGsB,qBAAuB1B,EAAOT,YAEnCwC,IAKR,QAASA,KAEL3B,EAAGe,YAAYU,iBAAiB,YAAaG,GAC7C5B,EAAGe,YAAYU,iBAAiB,aAAcG,GAE9C5B,EAAGe,YAAYU,iBAAiB,aAAcI,GAC9C7B,EAAGe,YAAYU,iBAAiB,WAAYI,GAE5C7B,EAAGe,YAAYU,iBAAiB,YAAaK,GAC7C9B,EAAGe,YAAYU,iBAAiB,YAAaK,GAGjD,QAAST,KAELrB,EAAGe,YAAYgB,oBAAoB,YAAaL,GAEhD1B,EAAGe,YAAYgB,oBAAoB,YAAaH,GAChD5B,EAAGe,YAAYgB,oBAAoB,aAAcH,GAEjD5B,EAAGe,YAAYgB,oBAAoB,aAAcF,GACjD7B,EAAGe,YAAYgB,oBAAoB,WAAYF,GAE/C7B,EAAGe,YAAYgB,oBAAoB,YAAaD,GAChD9B,EAAGe,YAAYgB,oBAAoB,YAAaD,GAGpD,QAASE,KAELnC,EAAUoC,KAAK,QAAQC,YAAY,yCACnCb,IACArB,EAAGmC,WAAWC,SACd5B,IAGJ,QAASkB,GAAoBW,GAEzBA,EAAGC,iBACHD,EAAGE,kBACH3C,EAAO4C,OAAO,WAEV3C,EAAUoC,KAAK,QAAQQ,SAAS,wCAChC,IAAIC,GAAO7C,EAAUoC,KAAK,QAAQU,GAAG,EACrC3C,GAAG4C,iBAAmB1C,QAAQ2C,KAAK7C,EAAGC,SACtCD,EAAG4C,iBAAiB5B,MAAQ,QAC5BhB,EAAG4C,iBAAiBrC,aAAeX,EAAOX,cAC1Ce,EAAGmC,WAAapC,EAAS,yQAAyQH,GAClS8C,EAAKI,OAAO9C,EAAGmC,YACf3B,MAIR,QAASG,KAEAX,EAAGK,OAAO0C,QAAU,IAIzB/C,EAAGgD,mBAAqBhD,EAAGiD,cAAcC,YACzClD,EAAGmD,WAAaC,KAAKC,OAAOrD,EAAGgD,mBAAqBhD,EAAGC,QAAQqD,iBAAmBtD,EAAGC,QAAQsD,UAC7FvD,EAAGwD,YAAcxD,EAAGmD,WAAanD,EAAGK,OAAO0C,OAC3C/C,EAAGyD,QAAUzD,EAAGK,OAAO0C,OAAS/C,EAAGC,QAAQsD,SAG3C3D,EAAO8D,WAAW,WAEe,OAAxB1D,EAAGC,QAAQ0D,WAEZ3D,EAAG4D,SAAS5C,MAAM6C,cAAgB7D,EAAGC,QAAQqD,gBAAkB,KAC/DtD,EAAG4D,SAAS5C,MAAM8C,WAAa,IAI/B9D,EAAG4D,SAAS5C,MAAM8C,WAAa9D,EAAGC,QAAQqD,gBAAkB,KAC5DtD,EAAG4D,SAAS5C,MAAM6C,cAAgB,EAGtC,KAAM,GAAIE,GAAI,EAAGA,EAAI/D,EAAG4D,SAASI,SAASjB,OAAQgB,IAClD,CACI,GAAIE,GAAQjE,EAAG4D,SAASI,SAASD,EACjCE,GAAMjD,MAAMkD,MAAQlE,EAAGmD,WAAa,KACpCc,EAAMjD,MAAMmD,aAAenE,EAAGC,QAAQqD,gBAAkB,SAKpE,QAASc,KAELC,EAAarE,EAAG2D,UAAY,GAGhC,QAASW,KAELD,EAAarE,EAAG2D,UAAY,GAGhC,QAASU,GAAaE,GAElBA,EAAoB,EAAVA,EAAc,EAAIA,EAC5BA,EAAUA,EAAUvE,EAAGyD,QAAUzD,EAAGyD,QAAUc,EAC9CvE,EAAG2D,UAAYY,CACf,IAAIC,GAAUxE,EAAG2D,UAAY3D,EAAGmD,WAAa,EAC7CnD,GAAG4D,SAAS5C,MAAMyD,UAAY,eAAiBD,EAAU,cAG7D,QAAS1D,KAEL,GAAI4D,GAAU1E,EAAGe,YAAY4D,uBAC7BC,GAAWF,EAAQR,MACnBW,EAAWH,EAAQI,OACnBC,EAAWL,EAAQM,KAAOlF,EAAQ0E,QAClCS,EAAWP,EAAQQ,IAAMpF,EAAQqF,QAGR,OAApBnF,EAAGC,QAAQe,OAAmBpB,EAAOT,WAUtCiG,EAAQR,EACRS,EAAQR,EACR7E,EAAGsF,WAAWtE,MAAMkD,MAAQ,OAC5BlE,EAAGsF,WAAWtE,MAAM8D,OAAS,SAX7BM,EAAQpF,EAAGC,QAAQsF,KACnBF,EAAQrF,EAAGC,QAAQuF,KACnBxF,EAAGsF,WAAWtE,MAAMkD,MAAQkB,EAAQ,KACpCpF,EAAGsF,WAAWtE,MAAM8D,OAASO,EAAQ,MAWpCrF,EAAGC,QAAQwF,UAAY,IAExBzF,EAAG0F,YAAY1E,MAAMkD,MAAQU,EAAW5E,EAAGC,QAAQwF,UAAY,KAC/DzF,EAAG0F,YAAY1E,MAAM8D,OAASD,EAAW7E,EAAGC,QAAQwF,UAAY,MAGpEE,EAAW3F,EAAG0F,YAAYE,YAC1BC,EAAW7F,EAAG0F,YAAYI,aAE1BC,IAIJ,QAASjE,GAAqBkE,GAE1BA,EAAE1D,gBACF,IAAI2D,GAAe,aAAVD,EAAEE,MAAuBF,EAAEG,SAAWH,EAAEG,QAAQ,EAEzDC,GAASH,GAAMA,EAAGI,OAASL,EAAEK,MAC7BC,EAASL,GAAMA,EAAGM,OAASP,EAAEO,MAE7BC,IAE2B,SAAtBxG,EAAGC,QAAQwG,OAEZC,IAKAC,IAKR,QAASD,KAEL,GAAIE,KAASjB,EAAWP,EAAgB,EAARyB,EAAYC,IAAoBC,EAAWnC,IACvEoC,IAASnB,EAAWR,EAAgB,EAAR4B,EAAYH,IAAmBI,EAAWrC,GAC1E7E,GAAG0F,YAAY1E,MAAMyD,UAAY,eAAwB,GAAPmC,EAAY,MAAe,GAAPI,EAAY,QAGtF,QAASL,KAEL,GAAIC,KAASjB,EAAWP,KAAWgB,EAASrB,GAAYH,IACpDoC,IAASnB,EAAWR,KAAWiB,EAASrB,GAAYJ,GAGxD+B,GAAgB7B,EAATqB,EAAoB,EAAIQ,EAC/BI,EAAgB/B,EAATqB,EAAoB,EAAIU,EAC/BJ,EAAOR,EAASrB,EAAWH,EAAYe,EAAWP,EAASwB,EAC3DI,EAAOV,EAASrB,EAAWJ,EAAYgB,EAAWR,EAAS2B,EAE3DhH,EAAG0F,YAAY1E,MAAMyD,UAAY,eAAwB,GAAPmC,EAAY,MAAe,GAAPI,EAAY,QAGtF,QAASjB,KAELe,EAAiBlC,EAAWe,EAC5BkB,EAAQzB,EAAQ0B,EAChBG,EAAQ5B,EAAQyB,EAChB9G,EAAGmB,SAASH,MAAMkD,MAAQ2C,EAAQ,KAClC7G,EAAGmB,SAASH,MAAM8D,OAASmC,EAAQ,KAGvC,QAAST,KAELO,EAAYX,EAASrB,EAAoB,GAAR8B,EACjCK,EAAYZ,EAASrB,EAAoB,GAARgC,EAEjCF,EAAWA,EAAYnC,EAAWiC,EAASjC,EAAWiC,EAAQE,EAC9DA,EAAsB,EAAXA,EAAe,EAAIA,EAE9BG,EAAWA,EAAYrC,EAAWoC,EAASpC,EAAWoC,EAAQC,EAC9DA,EAAsB,EAAXA,EAAe,EAAIA,EAE9BlH,EAAGmB,SAASH,MAAMyD,UAAY,eAAiBsC,EAAW,MAAQG,EAAW,QAGjF,QAASrG,KAEL,KAAKb,EAAGK,OAAO0C,QAAU,GAAzB,CAIA,GAAI9D,GAAgBkI,IAChBC,EAAWpH,EAAG2D,UAAY3D,EAAGC,QAAQsD,SAAWtE,GAAiBe,EAAG2D,UAAY1E,CACpF,OAAKmI,OAED/C,GAAarE,EAAG2D,eAGpBU,GAAapF,IAGjB,QAASkI,KAEL,IAAM,GAAIpD,GAAI,EAAGA,EAAI/D,EAAGK,OAAO0C,OAAQgB,IAEnC,GAAK/D,EAAGK,OAAO0D,GAAGsD,SAAWrH,EAAGM,UAAU+G,OAEtC,MAAOtD,GAKnB,QAASnC,KAELhC,EAAO8D,WAAW,WAEd1D,EAAGsH,YAAa,IAIxB,QAASzF,KAELjC,EAAO8D,WAAW,WAEd1D,EAAGsH,YAAa,IAIxB,QAASC,GAAgBC,GAErBxH,EAAGM,UAAYkH,EACf5H,EAAOZ,cAAgBgB,EAAGM,UAC1BV,EAAOX,cAAgBe,EAAGK,OAAOoH,QAAQzH,EAAGM,WA7WhD,GACI8F,GAAQE,EAAQ1B,EAAUC,EAAUE,EAAUE,EAAUG,EAAOC,EAAOM,EAAUE,EAAUgB,EAAOI,EAAOF,EAAUG,EAAUJ,EAD5H9G,EAAK0H,KAELtH,GACIG,aAAsB,EACtBF,UACAW,MAAsB,QACtB2G,OAAsB,YACtBpC,KAAsB,IACtBC,KAAsB,IACtBiB,OAAsB,OACtBxF,OAAsB,YACtBC,MAAsB,EACtBuE,UAAsB,EACtBlE,cAAsB,IACtBqG,qBAAsB,gBACtBC,gBAAsB,UACtBC,gBAAsB,UACtBnE,UAAsB,SACtBJ,SAAsB,EACtBD,gBAAsB,GAE1B7C,GAAgB,CAEpBT,GAAGP,GACHO,EAAGe,YACHf,EAAGmB,SACHnB,EAAG0F,YACH1F,EAAGiD,cACHjD,EAAG4D,SACH5D,EAAGM,UACHN,EAAGC,QACHD,EAAGK,UACHL,EAAGsH,YAAa,EAEhBtH,EAAG+H,iBAAkB,EACrB/H,EAAGgI,iBAAkB,EACrBhI,EAAGmD,WACHnD,EAAGgD,mBACHhD,EAAGwD,YACHxD,EAAG2D,UAAY,EACf3D,EAAGsB,oBAEHtB,EAAGN,KAAOA,EACVM,EAAGY,SAAWA,EACdZ,EAAGW,WAAaA,EAEhBX,EAAGuH,gBAAkBA,EACrBvH,EAAGoE,UAAYA,EACfpE,EAAGsE,UAAYA,EACftE,EAAGgC,qBAAuBA,EA+T1BpC,EAAOqI,OAAO,gBAAiB,SAAUC,EAAQC,GAExCjI,QAAQkI,UAAUF,IAAWA,IAAWC,IAEzCnI,EAAGM,UAAY4H,EACfrH,OAEL,GAEHjB,EAAOqI,OAAO,gBAAiB,SAAUC,EAAQC,GAExCjI,QAAQkI,UAAUF,IAAWA,IAAWC,IAEzCnI,EAAGM,UAAYN,EAAGK,OAAO6H,GACzBrH,OAEL,GAEHX,QAAQZ,QAAQ+I,QAAQC,GAAG,SAAU,WAEjC9H,MAGCV,EAAQyI,IAETrI,QAAQZ,QAAQkJ,UAAUF,GAAG,cAAe,WAExCxH,MAIRlB,EAAOqI,OAAO,WAEV,OACIjD,KAAMhF,EAAGe,YAAY4D,wBAAwBK,KAAOlF,EAAQ0E,QAC5DU,IAAMlF,EAAGe,YAAY4D,wBAAwBO,IAAMpF,EAAQqF,UAEhE,SAAU+C,EAAQC,GAEZjI,QAAQkI,UAAUF,IAAWA,IAAWC,GAEzC3H,MAEL,GAEHZ,EAAOqI,OAAO,eAAgB,SAAUC,EAAQC,GAEvCjI,QAAQkI,UAAUF,IAAWA,IAAWC,IAEzCzI,IACAc,OAEL,MAKf,QAASiI,6BAEL,OACI7J,SAAU,KACV8J,QAAU,gBACVrJ,KAAU,SAAUN,EAAOO,EAASC,EAAOC,GAEvCA,EAAK2B,SAAW7B,EAAQ,KAKpC,QAASqJ,gCAEL,OACI/J,SAAU,KACV8J,QAAU,gBACVrJ,KAAU,SAAUN,EAAOO,EAASC,EAAOC,GAEvCA,EAAKuB,YAAczB,EAAQ,KAKvC,QAASsJ,6BAEL,OACIhK,SAAU,KACV8J,QAAU,gBACVrJ,KAAU,SAAUN,EAAOO,EAASC,EAAOC,GAEvCA,EAAK8F,WAAahG,EAAQ,KAKtC,QAASuJ,8BAEL,OACIjK,SAAU,KACV8J,QAAU,gBACVrJ,KAAU,SAAUN,EAAOO,EAASC,EAAOC,GAEvCA,EAAKkG,YAAcpG,EAAQ,KAKvC,QAASwJ,+BAEL,OACIlK,SAAU,KACV8J,QAAU,gBACV7J,SAAU,2rBACVQ,KAAU,SAAUN,EAAOO,EAASC,EAAOC,GAEvCA,EAAKyD,cAAgB3D,EAAQ,GAAGyJ,uBAAuB,kBAAkB,GACzEvJ,EAAKoE,SAAWtE,EAAQ,GAAGyJ,uBAAuB,UAAU,GAC5DvJ,EAAKmB,eAKjB,QAASqI,sBAAqBC,GAE1B,OACIrK,SAAU,IACVS,KAAU,SAAUN,EAAOO,EAASC,GAEhCD,EAAQ,GAAGmC,iBAAiB,OAAQ,WAEhC1C,EAAMyD,OAAOjD,EAAM2J,eACpB,GACH5J,EAAQ,GAAGmC,iBAAiB,QAAS,WAEjCwH,EAAKE,KAAK,iCAjhB1BH,qBAAqBI,SAAW,QAChC1K,sBAAsB0K,SAAW,YAFjClJ,QACKmJ,OAAO,gBAAiB,aAAc,YACtCC,UAAU,cAAeN,sBACzBM,UAAU,eAAgB5K,uBAC1B4K,UAAU,sBAAuBX,8BACjCW,UAAU,mBAAoBb,2BAC9Ba,UAAU,mBAAoBV,2BAC9BU,UAAU,oBAAqBT,4BAC/BS,UAAU,qBAAsBR,6BA+gBrC,WACI,YAOA,SAASS,KACL,GAAIvJ,GAAK0H,IACT1H,GAAGwJ,cACCC,aAAiB,EACjBzI,MAAiB,MACjB2G,OAAiB,YACjBpC,KAAiB,IACjBC,KAAiB,IACjBiB,OAAiB,OACjBxF,OAAiB,YACjBC,MAAiB,EACjBuE,UAAiB,EACjBlE,cAAiB,IACjBsG,gBAAiB,UACjBC,gBAAiB,UACjBnE,UAAiB,SACjBJ,SAAiB,EACjBD,gBAAiB,EACjBjD,SAEQ4D,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,8BAGRzF,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,8BAGRzF,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,8BAGRzF,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,8BAGRzF,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,8BAGRzF,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,8BAGRzF,MAAQ,4BACRoD,OAAQ,6BACRqC,MAAQ,+BAzDxBxJ,QACKmJ,OAAO,gBACP1J,WAAW,iBAAkB4J,MA6DtC,WACE,YAEArJ,SACGmJ,OAAO,oBAAqB,oBAIjC,WACE,YAOA,SAASM,MALTzJ,QACGmJ,OAAO,oBACPO,IAAID,MAST,WACE,YAOA,SAASE,MALT3J,QACGmJ,OAAO,oBACPQ,OAAOA,MASZ3J,QAAQmJ,OAAO,gBAAgBO,KAAK,iBAAkB,SAASE,GAAiBA,EAAeC,IAAI,qBAAqB","file":"scripts/app.js","sourcesContent":["angular\r\n    .module('wipImageZoom', ['ngSanitize', 'ngTouch'])\r\n    .directive('imageOnLoad', imageOnLoadDirective)\r\n    .directive('wipImageZoom', wipImageZoomDirective)\r\n    .directive('wipImageZoomTracker', wipImageZoomTrackerDirective)\r\n    .directive('wipImageZoomLens', wipImageZoomLensDirective)\r\n    .directive('wipImageZoomMask', wipImageZoomMaskDirective)\r\n    .directive('wipImageZoomImage', wipImageZoomImageDirective)\r\n    .directive('wipImageZoomThumbs', wipImageZoomThumbsDirective);\r\n\r\nfunction wipImageZoomDirective($timeout)\r\n{\r\n    return {\r\n        restrict    : 'EA',\r\n        template    : '<div class=\"wip-image-zoom {{vm.options.style}}-style {{vm.options.thumbsPos}}-thumbs\"\\n     ng-class=\"{\\n     \\'active\\':vm.zoomActive, \\n     \\'immersive-mode\\':vm.immersiveModeActive && !immersive,\\n     \\'box-style\\':vm.options.style == \\'box\\' ,\\n     \\'inner-style\\':vm.options.style == \\'inner\\'}\">\\n\\n    <wip-image-zoom-thumbs ng-if=\"vm.options.thumbsPos === \\'top\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n\\n    <div class=\"main-image-wrapper\">\\n        <div class=\"image-zoom-tracker\" wip-image-zoom-tracker></div>\\n        <div class=\"image-zoom-lens\" wip-image-zoom-lens></div>\\n        <img class=\"main-image\" ng-src=\"{{vm.mainImage.medium}}\">\\n        <div class=\"zoom-mask\"\\n             ng-class=\"vm.options.style == \\'box\\' ? vm.options.boxPos:\\'\\'\"\\n             wip-image-zoom-mask>\\n            <img wip-image-zoom-image class=\"zoom-image main-image-large\"\\n                 ng-src=\"{{vm.mainImage.large}}\" image-on-load=\"vm.initZoom()\">\\n        </div>\\n        <div ng-if=\"vm.immersiveModeActive && !immersive && vm.options.immersiveModeMessage !== \\'\\'\"\\n             class=\"immersive-mode-message\" ng-bind=\"vm.options.immersiveModeMessage\"></div>\\n    </div>\\n\\n    <wip-image-zoom-thumbs\\n            ng-if=\"vm.options.thumbsPos === \\'bottom\\' && vm.images.length > 1\"></wip-image-zoom-thumbs>\\n</div>',\r\n        replace     : true,\r\n        scope       : {\r\n            selectedModel: '=?',\r\n            selectedIndex: '=?',\r\n            wipImageZoom : '=',\r\n            immersive    : '=?'\r\n        },\r\n        controllerAs: 'vm',\r\n        link        : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.el = element;\r\n            ctrl.init();\r\n        },\r\n        controller  : function ($scope, $document, $window, $compile)\r\n        {\r\n            var vm = this,\r\n                evPosX, evPosY, trackerW, trackerH, trackerL, trackerT, maskW, maskH, zoomImgW, zoomImgH, lensW, lensH, lensPosX, lensPosY, zoomLevelRatio,\r\n                defaultOpts = {\r\n                    defaultIndex        : 0, // Order of the default selected Image\r\n                    images              : [],\r\n                    style               : 'inner', // inner or box\r\n                    boxPos              : 'right-top', // e.g., right-top, right-middle, right-bottom, top-center, top-left, top-right ...\r\n                    boxW                : 400,\r\n                    boxH                : 400,\r\n                    method              : 'lens', // fallow 'lens' or 'pointer'\r\n                    cursor              : 'crosshair', // 'none', 'default', 'crosshair', 'pointer', 'move'\r\n                    lens                : true,\r\n                    zoomLevel           : 3, // 0: not scales, uses the original large image size, use 1 and above to adjust.\r\n                    immersiveMode       : 769, // false or 0 for disable, max width(px) for trigger\r\n                    immersiveModeMessage: 'Click to Zoom',\r\n                    prevThumbButton     : '&#9665;',\r\n                    nextThumbButton     : '&#9655;',\r\n                    thumbsPos           : 'bottom',\r\n                    thumbCol            : 3,\r\n                    thumbColPadding     : 4\r\n                },\r\n                updateTimeout = true;\r\n\r\n            vm.el;\r\n            vm.zoomTracker;\r\n            vm.zoomLens;\r\n            vm.zoomImageEl;\r\n            vm.thumbsWrapper;\r\n            vm.thumbsEl;\r\n            vm.mainImage;\r\n            vm.options;\r\n            vm.images = [];\r\n            vm.zoomActive = false;\r\n\r\n            vm.prevThumbActive = false;\r\n            vm.nextThumbActive = false;\r\n            vm.thumbWidth;\r\n            vm.thumbsWrapperWidth;\r\n            vm.thumbsWidth;\r\n            vm.thumbsPos = 0;\r\n            vm.immersiveModeActive;\r\n\r\n            vm.init = init;\r\n            vm.initZoom = initZoom;\r\n            vm.initThumbs = initThumbs;\r\n\r\n            vm.updateMainImage = updateMainImage;\r\n            vm.nextThumb = nextThumb;\r\n            vm.prevThumb = prevThumb;\r\n            vm.disableImmersiveMode = disableImmersiveMode;\r\n\r\n            function init()\r\n            {\r\n                vm.options = !$scope.wipImageZoom ? defaultOpts : angular.extend(defaultOpts, $scope.wipImageZoom);\r\n                vm.images = vm.options.images;\r\n\r\n                vm.mainImage = vm.images[vm.options.defaultIndex];\r\n\r\n                $scope.selectedIndex = vm.options.defaultIndex;\r\n                $scope.selectedModel = vm.mainImage;\r\n            }\r\n\r\n            function update()\r\n            {\r\n                // Debounce for update\r\n                if ( updateTimeout )\r\n                {\r\n                    $timeout.cancel(updateTimeout);\r\n                }\r\n\r\n                updateTimeout = $timeout(function ()\r\n                {\r\n                    initThumbs();\r\n                    initZoom();\r\n                    updateThumbsPos();\r\n                }, 400);\r\n            }\r\n\r\n            function initZoom()\r\n            {\r\n                initSizes();\r\n\r\n                vm.zoomTracker.style.cursor = vm.options.cursor;\r\n\r\n                if ( vm.options.lens )\r\n                {\r\n                    vm.zoomLens.style.display = 'block';\r\n                }\r\n                else\r\n                {\r\n                    vm.zoomLens.style.display = 'none';\r\n                }\r\n\r\n                // Reset Event Listeners\r\n                removeEventListeners();\r\n\r\n                vm.immersiveModeActive = vm.options.immersiveMode && vm.options.immersiveMode > $window.innerWidth;\r\n\r\n                if ( vm.immersiveModeActive && !$scope.immersive )\r\n                {\r\n                    vm.zoomTracker.addEventListener('mousedown', enableImmersiveMode);\r\n                }\r\n\r\n                if ( !vm.immersiveModeActive || $scope.immersive )\r\n                {\r\n                    addEventListeners();\r\n                }\r\n\r\n            }\r\n\r\n            function addEventListeners()\r\n            {\r\n                vm.zoomTracker.addEventListener('mousemove', zoomStateEnable);\r\n                vm.zoomTracker.addEventListener('touchstart', zoomStateEnable);\r\n\r\n                vm.zoomTracker.addEventListener('mouseleave', zoomStateDisable);\r\n                vm.zoomTracker.addEventListener('touchend', zoomStateDisable);\r\n\r\n                vm.zoomTracker.addEventListener('mousemove', setZoomImagePosition);\r\n                vm.zoomTracker.addEventListener('touchmove', setZoomImagePosition);\r\n            }\r\n\r\n            function removeEventListeners()\r\n            {\r\n                vm.zoomTracker.removeEventListener('mousedown', enableImmersiveMode);\r\n\r\n                vm.zoomTracker.removeEventListener('mousemove', zoomStateEnable);\r\n                vm.zoomTracker.removeEventListener('touchstart', zoomStateEnable);\r\n\r\n                vm.zoomTracker.removeEventListener('mouseleave', zoomStateDisable);\r\n                vm.zoomTracker.removeEventListener('touchend', zoomStateDisable);\r\n\r\n                vm.zoomTracker.removeEventListener('mousemove', setZoomImagePosition);\r\n                vm.zoomTracker.removeEventListener('touchmove', setZoomImagePosition);\r\n            }\r\n\r\n            function disableImmersiveMode()\r\n            {\r\n                $document.find('html').removeClass('wip-image-zoom-immersive-mode-enabled');\r\n                removeEventListeners();\r\n                vm.immersedEl.remove();\r\n                update();\r\n            }\r\n\r\n            function enableImmersiveMode(ev)\r\n            {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                $scope.$apply(function ()\r\n                {\r\n                    $document.find('html').addClass('wip-image-zoom-immersive-mode-enabled');\r\n                    var body = $document.find('body').eq(0);\r\n                    vm.immersedImageOpt = angular.copy(vm.options);\r\n                    vm.immersedImageOpt.style = 'inner';\r\n                    vm.immersedImageOpt.defaultIndex = $scope.selectedIndex;\r\n                    vm.immersedEl = $compile('<div class=\"immersive-wip-image-zoom\">\\n    <div class=\"disable-immersive-mode-button\" ng-click=\"vm.disableImmersiveMode()\">\\n        &#10006;</div>\\n    <img src=\"\" wip-image-zoom=\"vm.immersedImageOpt\" immersive=\"true\" selected-index=\"selectedIndex\">\\n</div>\\n')($scope);\r\n                    body.append(vm.immersedEl);\r\n                    update();\r\n                });\r\n            }\r\n\r\n            function initThumbs()\r\n            {\r\n                if ( vm.images.length <= 1 )\r\n                {\r\n                    return;\r\n                }\r\n                vm.thumbsWrapperWidth = vm.thumbsWrapper.clientWidth;\r\n                vm.thumbWidth = Math.round((vm.thumbsWrapperWidth + vm.options.thumbColPadding) / vm.options.thumbCol);\r\n                vm.thumbsWidth = vm.thumbWidth * vm.images.length;\r\n                vm.maxPosX = vm.images.length - vm.options.thumbCol;\r\n\r\n                // Set Thumbnail width\r\n                $scope.$evalAsync(function ()\r\n                {\r\n                    if ( vm.options.thumbsPos == 'top' )\r\n                    {\r\n                        vm.thumbsEl.style.paddingBottom = vm.options.thumbColPadding + 'px';\r\n                        vm.thumbsEl.style.paddingTop = 0;\r\n                    }\r\n                    else\r\n                    {\r\n                        vm.thumbsEl.style.paddingTop = vm.options.thumbColPadding + 'px';\r\n                        vm.thumbsEl.style.paddingBottom = 0;\r\n                    }\r\n\r\n                    for ( var i = 0; i < vm.thumbsEl.children.length; i++ )\r\n                    {\r\n                        var thumb = vm.thumbsEl.children[i];\r\n                        thumb.style.width = vm.thumbWidth + 'px';\r\n                        thumb.style.paddingRight = vm.options.thumbColPadding + 'px';\r\n                    }\r\n                });\r\n            }\r\n\r\n            function nextThumb()\r\n            {\r\n                scrollThumbs(vm.thumbsPos + 1);\r\n            }\r\n\r\n            function prevThumb()\r\n            {\r\n                scrollThumbs(vm.thumbsPos - 1);\r\n            }\r\n\r\n            function scrollThumbs(newPosX)\r\n            {\r\n                newPosX = newPosX < 0 ? 0 : newPosX;\r\n                newPosX = newPosX > vm.maxPosX ? vm.maxPosX : newPosX;\r\n                vm.thumbsPos = newPosX;\r\n                var scrollX = vm.thumbsPos * vm.thumbWidth * -1;\r\n                vm.thumbsEl.style.transform = 'translate3d(' + scrollX + 'px, 0px, 0)';\r\n            }\r\n\r\n            function initSizes()\r\n            {\r\n                var tracker = vm.zoomTracker.getBoundingClientRect();\r\n                trackerW = tracker.width;\r\n                trackerH = tracker.height;\r\n                trackerL = tracker.left + $window.scrollX;\r\n                trackerT = tracker.top + $window.scrollY;\r\n\r\n                // Box Style\r\n                if ( vm.options.style == 'box' && !$scope.immersive )\r\n                {\r\n                    maskW = vm.options.boxW;\r\n                    maskH = vm.options.boxH;\r\n                    vm.zoomMaskEl.style.width = maskW + 'px';\r\n                    vm.zoomMaskEl.style.height = maskH + 'px';\r\n                }\r\n                // Inner Style\r\n                else\r\n                {\r\n                    maskW = trackerW;\r\n                    maskH = trackerH;\r\n                    vm.zoomMaskEl.style.width = '100%';\r\n                    vm.zoomMaskEl.style.height = '100%';\r\n                }\r\n\r\n                if ( vm.options.zoomLevel > 1 )\r\n                {\r\n                    vm.zoomImageEl.style.width = trackerW * vm.options.zoomLevel + 'px';\r\n                    vm.zoomImageEl.style.height = trackerH * vm.options.zoomLevel + 'px';\r\n                }\r\n\r\n                zoomImgW = vm.zoomImageEl.offsetWidth;\r\n                zoomImgH = vm.zoomImageEl.offsetHeight;\r\n\r\n                setLensSize();\r\n\r\n            }\r\n\r\n            function setZoomImagePosition(e)\r\n            {\r\n                e.preventDefault();\r\n                var te = e.type == 'touchmove' && e.touches && e.touches[0];\r\n\r\n                evPosX = te && te.pageX || e.pageX;\r\n                evPosY = te && te.pageY || e.pageY;\r\n\r\n                setLensPosition();\r\n\r\n                if ( vm.options.method === 'lens' )\r\n                {\r\n                    trackLens();\r\n                }\r\n                // pointer\r\n                else\r\n                {\r\n                    trackPointer();\r\n                }\r\n\r\n            }\r\n\r\n            function trackLens()\r\n            {\r\n                var posX = [(zoomImgW - maskW + lensW * 1 / zoomLevelRatio) * [(lensPosX / trackerW)]];\r\n                var posY = [(zoomImgH - maskH + lensH * 1 / zoomLevelRatio) * [lensPosY / trackerH]];\r\n                vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\r\n            }\r\n\r\n            function trackPointer()\r\n            {\r\n                var posX = [(zoomImgW - maskW) * [(evPosX - trackerL) / trackerW]];\r\n                var posY = [(zoomImgH - maskH) * [(evPosY - trackerT) / trackerH]];\r\n\r\n                // Touch Fixes\r\n                posX = evPosX < trackerL ? 0 : posX;\r\n                posY = evPosY < trackerT ? 0 : posY;\r\n                posX = evPosX > trackerL + trackerW ? (zoomImgW - maskW) : posX;\r\n                posY = evPosY > trackerT + trackerH ? (zoomImgH - maskH) : posY;\r\n\r\n                vm.zoomImageEl.style.transform = 'translate3d(' + posX * -1 + 'px,' + posY * -1 + 'px,0)';\r\n            }\r\n\r\n            function setLensSize()\r\n            {\r\n                zoomLevelRatio = trackerW / zoomImgW;\r\n                lensW = maskW * zoomLevelRatio;\r\n                lensH = maskH * zoomLevelRatio;\r\n                vm.zoomLens.style.width = lensW + 'px';\r\n                vm.zoomLens.style.height = lensH + 'px';\r\n            }\r\n\r\n            function setLensPosition()\r\n            {\r\n                lensPosX = (evPosX - trackerL) - lensW * 0.5;\r\n                lensPosY = (evPosY - trackerT) - lensH * 0.5;\r\n\r\n                lensPosX = lensPosX > (trackerW - lensW) ? trackerW - lensW : lensPosX;\r\n                lensPosX = lensPosX < 0 ? 0 : lensPosX;\r\n\r\n                lensPosY = lensPosY > (trackerH - lensH) ? trackerH - lensH : lensPosY;\r\n                lensPosY = lensPosY < 0 ? 0 : lensPosY;\r\n\r\n                vm.zoomLens.style.transform = 'translate3d(' + lensPosX + 'px,' + lensPosY + 'px,0)';\r\n            }\r\n\r\n            function updateThumbsPos()\r\n            {\r\n                if ( vm.images.length <= 1 )\r\n                {\r\n                    return;\r\n                }\r\n                var selectedIndex = getSelectedIndex();\r\n                var isInView = vm.thumbsPos + vm.options.thumbCol > selectedIndex && vm.thumbsPos < selectedIndex;\r\n                if ( isInView )\r\n                {\r\n                    scrollThumbs(vm.thumbsPos);\r\n                    return;\r\n                }\r\n                scrollThumbs(selectedIndex);\r\n            }\r\n\r\n            function getSelectedIndex()\r\n            {\r\n                for ( var i = 0; i < vm.images.length; i++ )\r\n                {\r\n                    if ( vm.images[i].medium === vm.mainImage.medium )\r\n                    {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function zoomStateEnable()\r\n            {\r\n                $scope.$evalAsync(function ()\r\n                {\r\n                    vm.zoomActive = true;\r\n                })\r\n            }\r\n\r\n            function zoomStateDisable()\r\n            {\r\n                $scope.$evalAsync(function ()\r\n                {\r\n                    vm.zoomActive = false;\r\n                })\r\n            }\r\n\r\n            function updateMainImage(image)\r\n            {\r\n                vm.mainImage = image;\r\n                $scope.selectedModel = vm.mainImage;\r\n                $scope.selectedIndex = vm.images.indexOf(vm.mainImage);\r\n            }\r\n\r\n            $scope.$watch('selectedModel', function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    vm.mainImage = newVal;\r\n                    updateThumbsPos();\r\n                }\r\n            }, true);\r\n\r\n            $scope.$watch('selectedIndex', function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    vm.mainImage = vm.images[newVal];\r\n                    updateThumbsPos();\r\n                }\r\n            }, true);\r\n\r\n            angular.element(window).on('resize', function ()\r\n            {\r\n                update();\r\n            });\r\n\r\n            if ( $window.Ps )\r\n            {\r\n                angular.element(document).on('ps-scroll-y', function ()\r\n                {\r\n                    initSizes();\r\n                });\r\n            }\r\n\r\n            $scope.$watch(function ()\r\n            {\r\n                return {\r\n                    left: vm.zoomTracker.getBoundingClientRect().left + $window.scrollX,\r\n                    top : vm.zoomTracker.getBoundingClientRect().top + $window.scrollY\r\n                };\r\n            }, function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    update();\r\n                }\r\n            }, true);\r\n\r\n            $scope.$watch('wipImageZoom', function (newVal, oldVal)\r\n            {\r\n                if ( angular.isDefined(newVal) && newVal !== oldVal )\r\n                {\r\n                    init();\r\n                    update();\r\n                }\r\n            }, true);\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomLensDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomLens = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomTrackerDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomTracker = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomMaskDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomMaskEl = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomImageDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.zoomImageEl = element[0];\r\n        }\r\n    }\r\n}\r\n\r\nfunction wipImageZoomThumbsDirective()\r\n{\r\n    return {\r\n        restrict: 'EA',\r\n        require : '^wipImageZoom',\r\n        template: '<div class=\"thumbs-wrapper\" ng-swipe-left=\"vm.nextThumb()\" ng-swipe-right=\"vm.prevThumb()\">\\n    <div class=\"thumbs\" >\\n        <div class=\"thumb-wrapper\" ng-repeat=\"image in vm.images\">\\n            <img ng-src=\"{{image.thumb}}\" ng-click=\"vm.updateMainImage(image)\"\\n                 ng-class=\"{\\'selected\\': vm.mainImage.thumb === image.thumb}\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\"prev-button\"\\n     ng-if=\"vm.thumbsPos !== 0\"\\n     ng-click=\"vm.prevThumb()\"\\n     ng-bind-html=\"vm.options.prevThumbButton\">Prev\\n</div>\\n<div class=\"next-button\"\\n     ng-if=\"vm.thumbsPos !== vm.maxPosX\"\\n     ng-click=\"vm.nextThumb()\"\\n     ng-bind-html=\"vm.options.nextThumbButton\">Next\\n</div>',\r\n        link    : function (scope, element, attrs, ctrl)\r\n        {\r\n            ctrl.thumbsWrapper = element[0].getElementsByClassName('thumbs-wrapper')[0];\r\n            ctrl.thumbsEl = element[0].getElementsByClassName('thumbs')[0];\r\n            ctrl.initThumbs();\r\n        }\r\n    }\r\n}\r\n\r\nfunction imageOnLoadDirective($log)\r\n{\r\n    return {\r\n        restrict: 'A',\r\n        link    : function (scope, element, attrs)\r\n        {\r\n            element[0].addEventListener('load', function ()\r\n            {\r\n                scope.$apply(attrs.imageOnLoad);\r\n            }, false);\r\n            element[0].addEventListener('error', function ()\r\n            {\r\n                $log.warn('image could not be loaded');\r\n            });\r\n        }\r\n    };\r\n}\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('wipImageZoom')\r\n        .controller('MainController', MainController);\r\n\r\n    /** @ngInject */\r\n    function MainController() {\r\n        var vm = this;\r\n        vm.zoomOptions1 = {\r\n            defaultImage   : 0,\r\n            style          : 'box',\r\n            boxPos         : 'right-top',\r\n            boxW           : 400,\r\n            boxH           : 400,\r\n            method         : 'lens',\r\n            cursor         : 'crosshair',\r\n            lens           : true,\r\n            zoomLevel      : 3,\r\n            immersiveMode  : 769,\r\n            prevThumbButton: '&#9665;',\r\n            nextThumbButton: '&#9655;',\r\n            thumbsPos      : 'bottom',\r\n            thumbCol       : 4,\r\n            thumbColPadding: 4,\r\n            images         : [\r\n                {\r\n                    thumb : 'assets/images/1-thumb.jpg',\r\n                    medium: 'assets/images/1-medium.jpg',\r\n                    large : 'assets/images/1-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/2-thumb.jpg',\r\n                    medium: 'assets/images/2-medium.jpg',\r\n                    large : 'assets/images/2-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/3-thumb.jpg',\r\n                    medium: 'assets/images/3-medium.jpg',\r\n                    large : 'assets/images/3-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/4-thumb.jpg',\r\n                    medium: 'assets/images/4-medium.jpg',\r\n                    large : 'assets/images/4-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/5-thumb.jpg',\r\n                    medium: 'assets/images/5-medium.jpg',\r\n                    large : 'assets/images/5-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/6-thumb.jpg',\r\n                    medium: 'assets/images/6-medium.jpg',\r\n                    large : 'assets/images/6-large.jpg'\r\n                },\r\n                {\r\n                    thumb : 'assets/images/7-thumb.jpg',\r\n                    medium: 'assets/images/7-medium.jpg',\r\n                    large : 'assets/images/7-large.jpg'\r\n                }\r\n            ]\r\n        };\r\n    }\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo', ['wipImageZoom']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock() {\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('wipImageZoomDemo')\n    .config(config);\n\n  /** @ngInject */\n  function config() {\n\n  }\n\n})();\n\nangular.module(\"wipImageZoom\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><h1 class=page-title>wip-image-zoom</h1><div class=demo-preview><img src=assets/images/1-medium.jpg wip-image-zoom=vm.zoomOptions1 selected-model=vm.selected selected-index=vm.selectedIndex></div><section><div class=demo-settings><button ng-repeat=\\\"image in vm.zoomOptions1.images\\\" ng-click=\\\"vm.selected = image\\\">Image {{$index +1 }}</button><div class=setting><label>Style:</label><select ng-model=vm.zoomOptions1.style><option value=box>Box</option><option value=inner>Inner</option></select></div><div class=setting><label>Box Style Position:</label><select ng-model=vm.zoomOptions1.boxPos><option value=right-top>Right Top</option><option value=right-middle>Right Middle</option><option value=right-bottom>Right Bottom</option><option value=left-top>Left Top</option><option value=left-middle>Left Middle</option><option value=left-bottom>Left Bottom</option><option value=bottom-left>Bottom Left</option><option value=bottom-center>Bottom Center</option><option value=bottom-right>Bottom Right</option><option value=top-left>Top Left</option><option value=top-center>Top Center</option><option value=top-right>Top Right</option></select></div><div class=setting><label>Box Width:</label><input ng-model=vm.zoomOptions1.boxW type=number step=1 min=0></div><div class=setting><label>Box Height:</label><input ng-model=vm.zoomOptions1.boxH type=number step=1 min=0></div><div class=setting><label>Method:</label><select ng-model=vm.zoomOptions1.method><option value=lens>Lens</option><option value=pointer>Pointer</option></select></div><div class=setting><label>Cursor:</label><select ng-model=vm.zoomOptions1.cursor><option value=default>Default</option><option value=pointer>Pointer</option><option value=crosshair>Crosshair</option><option value=move>Move</option><option value=zoom-in>Zoom in</option><option value=none>None</option></select></div><div class=setting><label>Show Lens:</label><input ng-model=vm.zoomOptions1.lens type=checkbox></div><div class=setting><label>Zoom Level:</label><input ng-model=vm.zoomOptions1.zoomLevel type=number step=.5 min=0></div><div class=setting><label>Immersive Mode:</label><input ng-model=vm.zoomOptions1.immersiveMode type=number step=1 min=0><div class=detail>false or 0 for disable, max width(px) for trigger</div></div><div class=setting><label>Thumbs Position:</label><select ng-model=vm.zoomOptions1.thumbsPos><option value=top>top</option><option value=bottom>bottom</option></select></div><div class=setting><label>Previous Thumb Button:</label><input ng-model=vm.zoomOptions1.prevThumbButton type=text></div><div class=setting><label>Next Thumb Button:</label><input ng-model=vm.zoomOptions1.nextThumbButton type=text></div><div class=setting><label>Thumb Column Count:</label><input ng-model=vm.zoomOptions1.thumbCol type=number step=1 min=1></div><div class=setting><label>Thumb Column Padding (px):</label><input ng-model=vm.zoomOptions1.thumbColPadding type=number step=1 min=0></div></div><div class=demo-json><h4>Options</h4><pre>{{vm.zoomOptions1 | json}}</pre><h4>Selected Model</h4><pre>{{vm.selected | json}}</pre><h4>SelectedIndex</h4><pre>{{vm.selectedIndex}}</pre></div></section></div>\");}]);"],"sourceRoot":"/source/"}